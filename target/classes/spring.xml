<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:cxf="http://cxf.apache.org/core" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://cxf.apache.org/jaxws
        http://cxf.apache.org/schemas/jaxws.xsd">
    <context:annotation-config/>
    <!-- 加载数据库连接信息属性文件 -->

    <bean id="prop" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <!-- 这里是PropertiesFactoryBean类，它也有个locations属性，也是接收一个数组，跟上面一样 -->
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
            </list>
        </property>
    </bean>


    <import resource="classpath*:META-INF/cxf/cxf.xml" />
    <import resource="classpath*:META-INF/cxf/cxf-extension-soap.xml" />
    <import resource="classpath*:META-INF/cxf/cxf-servlet.xml" />

    <!--CXF WebService 配置-->
    <bean id="helloImpl" class="com.yao.service.Impl.HelloWorldImpl"/>
    <jaxws:endpoint id="helloWorld" implementor="#helloImpl" address="/sayHello" />
    <bean id="nlpClassifierImpl" class="com.yao.service.Impl.NLPClassifierImpl">
        <constructor-arg name="w2v_model_path" value="#{prop['w2v_model']}"/>
    </bean>
    <jaxws:endpoint id="nlpClassifier" implementor="#nlpClassifierImpl" address="/nlpClassifier" />


    <!--Quartz 配置-->
    <bean id="TrainStoryJob" class="com.yao.job.TrainStoryJob"/>
    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="TrainStoryJob"></property>
        <property name="targetMethod" value="runTask"></property>
        <property name="concurrent" value="false"></property>
        <!-- concurrent : false表示等上一个任务执行完后再开启新的任务 -->
    </bean>

    <bean id="trainStoryJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobDetail"></property>
        <property name="cronExpression" value="0 */10 * * * ?"></property>
        <property name="startDelay" value="3000"></property>
    </bean>

    <bean id="schedulerFactoryBean"  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="trainStoryJobTrigger"/>
            </list>
        </property>
    </bean>
</beans>